<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SalesApi</name>
    </assembly>
    <members>
        <member name="M:SalesApi.Controllers.CustomerController.ListAsync">
            <summary>
            Lists all customers.
            </summary>
            <returns>List of customers.</returns>
        </member>
        <member name="M:SalesApi.Controllers.CustomerController.PostAsync(SalesApi.Resources.SaveCustomerResource)">
            <summary>
            Saves a new customer.
            </summary>
            <param name="resource">Customer data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.CustomerController.PutAsync(System.Int32,SalesApi.Resources.SaveCustomerResource)">
            <summary>
            Updates an existing customer according to an identifier.
            </summary>
            <param name="id">Customer identifier.</param>
            <param name="resource">Updated Customer data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.CustomerController.DeleteAsync(System.Int32)">
            <summary>
            Deletes a given customer according to an identifier.
            </summary>
            <param name="id">Customer identifier.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.CustomerController.GetCustomer(System.Int32)">
            <summary>
            Get a single customer according to an identifier
            </summary>
            <param name="id">Customer Identifier</param>
            <returns>single customer</returns>
        </member>
        <member name="M:SalesApi.Controllers.InvoiceController.PostAsync(SalesApi.Resources.SaveInvoiceResource)">
            <summary>
            Saves a new invoice.
            </summary>
            <param name="resource">Invoice data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.ProductsController.ListAsync">
            <summary>
            Lists all products.
            </summary>
            <returns>List of products.</returns>
        </member>
        <member name="M:SalesApi.Controllers.ProductsController.PostAsync(SalesApi.Resources.SaveProductResource)">
            <summary>
            Saves a new product.
            </summary>
            <param name="resource">Product data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.ProductsController.PutAsync(System.Int32,SalesApi.Resources.SaveProductResource)">
            <summary>
            Updates an existing product according to an identifier.
            </summary>
            <param name="id">Product identifier.</param>
            <param name="resource">Updated Product data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.ProductsController.DeleteAsync(System.Int32)">
            <summary>
            Deletes a given product according to an identifier.
            </summary>
            <param name="id">Product identifier.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.ProductsController.GetProduct(System.Int32)">
            <summary>
            Get a single product according to an identifier
            </summary>
            <param name="id">Product Identifier</param>
            <returns>single product</returns>
        </member>
        <member name="M:SalesApi.Controllers.SalesController.ListAsync">
            <summary>
            Lists all sales Transactions.
            </summary>
            <returns>List of sales Transactions.</returns>
        </member>
        <member name="M:SalesApi.Controllers.SalesController.PostAsync(SalesApi.Resources.SaveSalesResource)">
            <summary>
            Saves a new sales transaction.
            </summary>
            <param name="resource">Sales Transaction data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.SalesController.PutAsync(System.Int32,SalesApi.Resources.SaveSalesResource)">
            <summary>
            Updates an existing Sales Transaction according to an identifier.
            </summary>
            <param name="id">Sales identifier.</param>
            <param name="resource">Updated Sales data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.SalesController.DeleteAsync(System.Int32)">
            <summary>
            Deletes a given Sales according to an identifier.
            </summary>
            <param name="id">Sales identifier.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Controllers.SalesController.GetProduct(System.Int32)">
            <summary>
            Get a single sales according to an identifier
            </summary>
            <param name="id">Sales Identifier</param>
            <returns>single sales</returns>
        </member>
        <member name="M:SalesApi.Controllers.UsersController.ListAsync">
            <summary>
            Lists all users.
            </summary>
            <returns>List of users.</returns>
        </member>
        <member name="M:SalesApi.Controllers.UsersController.PostAsync(SalesApi.Resources.SaveUserResource)">
            <summary>
            Saves a new user.
            </summary>
            <param name="resource">User data.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.CustomerListResponse.#ctor(System.Collections.Generic.IEnumerable{SalesApi.Domain.Models.Customer})">
            <summary>
            Creates a success response.
            </summary>
            <param name="customers">Saved customers.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.CustomerListResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.CustomerResponse.#ctor(SalesApi.Domain.Models.Customer)">
            <summary>
            Creates a success response.
            </summary>
            <param name="customer">Saved customer.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.CustomerResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.InvoiceResponse.#ctor(SalesApi.Domain.Models.Invoice)">
            <summary>
            Creates a success response.
            </summary>
            <param name="invoice">Saved invoice.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.InvoiceResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.ProductListResponse.#ctor(System.Collections.Generic.IEnumerable{SalesApi.Domain.Models.Product})">
            <summary>
            Creates a success response.
            </summary>
            <param name="products">Saved product.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.ProductListResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.ProductResponse.#ctor(SalesApi.Domain.Models.Product)">
            <summary>
            Creates a success response.
            </summary>
            <param name="product">Saved product.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.ProductResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.SalesResponse.#ctor(SalesApi.Domain.Models.Sales)">
            <summary>
            Creates a success response.
            </summary>
            <param name="sale">Saved sale.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.SalesResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.UserListResponse.#ctor(System.Collections.Generic.IEnumerable{SalesApi.Domain.Models.User})">
            <summary>
            Creates a success response.
            </summary>
            <param name="users">Saved users.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.UserListResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.UserResponse.#ctor(SalesApi.Domain.Models.User)">
            <summary>
            Creates a success response.
            </summary>
            <param name="user">Saved user.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Domain.Services.Communication.UserResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Resources.SalesListResponse.#ctor(System.Collections.Generic.IEnumerable{SalesApi.Domain.Models.Sales})">
            <summary>
            Creates a success response.
            </summary>
            <param name="sales">Saved sales.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:SalesApi.Resources.SalesListResponse.#ctor(System.String)">
            <summary>
            Creates am error response.
            </summary>
            <param name="message">Error message.</param>
            <returns>Response.</returns>
        </member>
        <member name="F:SalesApi.Extensions.PasswordFormat.Hashed">
            <summary>
            Hashed
            </summary>
        </member>
        <member name="F:SalesApi.Extensions.PasswordFormat.Encrypted">
            <summary>
            Encrypted
            </summary>
        </member>
    </members>
</doc>
